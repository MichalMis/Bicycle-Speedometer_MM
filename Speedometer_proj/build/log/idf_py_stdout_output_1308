[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\mmich\Desktop\Speedometer_proj\build\bootloader\esp-idf\esptool_py && C:\Users\mmich\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/mmich/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/mmich/Desktop/Speedometer_proj/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/9] Building C object esp-idf/nimBLE/CMakeFiles/__idf_nimBLE.dir/nimBLE.c.obj
[3/9] Linking C static library esp-idf\nimBLE\libnimBLE.a
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/Speedometer.c.obj
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable Speedometer.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/mmich/Desktop/Speedometer_proj/build/Speedometer.bin
[9/9] cmd.exe /C "cd /D C:\Users\mmich\Desktop\Speedometer_proj\build\esp-idf\esptool_py && C:\Users\mmich\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/mmich/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/mmich/Desktop/Speedometer_proj/build/partition_table/partition-table.bin C:/Users/mmich/Desktop/Speedometer_proj/build/Speedometer.bin"
Speedometer.bin binary size 0x904f0 bytes. Smallest app partition is 0x100000 bytes. 0x6fb10 bytes (44%) free.
